///*
//
//类特殊函数：析构函数
//
//*/
//
//
#include <iostream>
#include <Windows.h>
//#include<synchapi.h>		// 这个为啥不能用啊

class Student {
public:
	//std::string name;
	//int age;

	// 构造函数，创建对象
	Student() {
		std::cout << "..构造函数...\n";
	}

	// 析构函数，销毁对象  
	~Student() {
		std::cout << "..析构函数...\n";
	}
};


void createStudent_stack() {
	Student stu;

	for (int i = 0; i < 10; i++) {
		std::cout << "..在createStudent_stack函数中...\n";
		Sleep(1000);						// sleep for 1 second
	}
}


void createStudent_heap() {
	Student* stu = new Student;

	for (int i = 0; i < 10; i++) {
		std::cout << "..在createStudent_heap函数中...\n";
		Sleep(1000);						// sleep for 1 second
	}
}


int main() {


	createStudent_stack();						// 函数内部的空间在函数执行完毕后就被释放，即栈中的stu对象被释放，析构器被调用
	createStudent_heap();

	for (int i = 0; i < 10; i++) {
		std::cout << "..在Student类对象创建之后...\n";
		Sleep(1000);
	}

	return 0;
}


/*

..构造函数...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..在createStudent_stack函数中...
..析构函数...
..构造函数...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在createStudent_heap函数中...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...
..在Student类对象创建之后...

*/